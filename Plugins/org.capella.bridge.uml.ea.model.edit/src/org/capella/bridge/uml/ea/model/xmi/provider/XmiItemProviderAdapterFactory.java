/**
 * Copyright (c) 2021 THALES GLOBAL SERVICES.
 * All right reserved. This program and the accompanying materials are made 
 * available under the terms of the Eclipse Public License 2.0
 * which is available at https://www.eclipse.org/legal/epl-2.0/
 * 
 * Contributors: Artal Technologies - initial API and implementation
 */
package org.capella.bridge.uml.ea.model.xmi.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.capella.bridge.uml.ea.model.xmi.util.XmiAdapterFactory;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class XmiItemProviderAdapterFactory extends XmiAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public XmiItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.capella.bridge.uml.ea.model.xmi.Extension} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExtensionItemProvider extensionItemProvider;

	/**
	 * This creates an adapter for a {@link org.capella.bridge.uml.ea.model.xmi.Extension}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExtensionAdapter() {
		if (extensionItemProvider == null) {
			extensionItemProvider = new ExtensionItemProvider(this);
		}

		return extensionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.capella.bridge.uml.ea.model.xmi.Documentation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DocumentationItemProvider documentationItemProvider;

	/**
	 * This creates an adapter for a {@link org.capella.bridge.uml.ea.model.xmi.Documentation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDocumentationAdapter() {
		if (documentationItemProvider == null) {
			documentationItemProvider = new DocumentationItemProvider(this);
		}

		return documentationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.capella.bridge.uml.ea.model.xmi.elements} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected elementsItemProvider elementsItemProvider;

	/**
	 * This creates an adapter for a {@link org.capella.bridge.uml.ea.model.xmi.elements}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createelementsAdapter() {
		if (elementsItemProvider == null) {
			elementsItemProvider = new elementsItemProvider(this);
		}

		return elementsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.capella.bridge.uml.ea.model.xmi.element} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected elementItemProvider elementItemProvider;

	/**
	 * This creates an adapter for a {@link org.capella.bridge.uml.ea.model.xmi.element}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createelementAdapter() {
		if (elementItemProvider == null) {
			elementItemProvider = new elementItemProvider(this);
		}

		return elementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.capella.bridge.uml.ea.model.xmi.xrefs} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected xrefsItemProvider xrefsItemProvider;

	/**
	 * This creates an adapter for a {@link org.capella.bridge.uml.ea.model.xmi.xrefs}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createxrefsAdapter() {
		if (xrefsItemProvider == null) {
			xrefsItemProvider = new xrefsItemProvider(this);
		}

		return xrefsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.capella.bridge.uml.ea.model.xmi.profiles} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected profilesItemProvider profilesItemProvider;

	/**
	 * This creates an adapter for a {@link org.capella.bridge.uml.ea.model.xmi.profiles}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createprofilesAdapter() {
		if (profilesItemProvider == null) {
			profilesItemProvider = new profilesItemProvider(this);
		}

		return profilesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.capella.bridge.uml.ea.model.xmi.properties} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected propertiesItemProvider propertiesItemProvider;

	/**
	 * This creates an adapter for a {@link org.capella.bridge.uml.ea.model.xmi.properties}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createpropertiesAdapter() {
		if (propertiesItemProvider == null) {
			propertiesItemProvider = new propertiesItemProvider(this);
		}

		return propertiesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.capella.bridge.uml.ea.model.xmi.PackagedElement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PackagedElementItemProvider packagedElementItemProvider;

	/**
	 * This creates an adapter for a {@link org.capella.bridge.uml.ea.model.xmi.PackagedElement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPackagedElementAdapter() {
		if (packagedElementItemProvider == null) {
			packagedElementItemProvider = new PackagedElementItemProvider(this);
		}

		return packagedElementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.capella.bridge.uml.ea.model.xmi.umlProfile} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected umlProfileItemProvider umlProfileItemProvider;

	/**
	 * This creates an adapter for a {@link org.capella.bridge.uml.ea.model.xmi.umlProfile}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createumlProfileAdapter() {
		if (umlProfileItemProvider == null) {
			umlProfileItemProvider = new umlProfileItemProvider(this);
		}

		return umlProfileItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.capella.bridge.uml.ea.model.xmi.ownedEnd} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ownedEndItemProvider ownedEndItemProvider;

	/**
	 * This creates an adapter for a {@link org.capella.bridge.uml.ea.model.xmi.ownedEnd}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createownedEndAdapter() {
		if (ownedEndItemProvider == null) {
			ownedEndItemProvider = new ownedEndItemProvider(this);
		}

		return ownedEndItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.capella.bridge.uml.ea.model.xmi.packageImport} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected packageImportItemProvider packageImportItemProvider;

	/**
	 * This creates an adapter for a {@link org.capella.bridge.uml.ea.model.xmi.packageImport}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createpackageImportAdapter() {
		if (packageImportItemProvider == null) {
			packageImportItemProvider = new packageImportItemProvider(this);
		}

		return packageImportItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.capella.bridge.uml.ea.model.xmi.importedPackage} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected importedPackageItemProvider importedPackageItemProvider;

	/**
	 * This creates an adapter for a {@link org.capella.bridge.uml.ea.model.xmi.importedPackage}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createimportedPackageAdapter() {
		if (importedPackageItemProvider == null) {
			importedPackageItemProvider = new importedPackageItemProvider(this);
		}

		return importedPackageItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.capella.bridge.uml.ea.model.xmi.ownedAttribute} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ownedAttributeItemProvider ownedAttributeItemProvider;

	/**
	 * This creates an adapter for a {@link org.capella.bridge.uml.ea.model.xmi.ownedAttribute}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createownedAttributeAdapter() {
		if (ownedAttributeItemProvider == null) {
			ownedAttributeItemProvider = new ownedAttributeItemProvider(this);
		}

		return ownedAttributeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.capella.bridge.uml.ea.model.xmi.type} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected typeItemProvider typeItemProvider;

	/**
	 * This creates an adapter for a {@link org.capella.bridge.uml.ea.model.xmi.type}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createtypeAdapter() {
		if (typeItemProvider == null) {
			typeItemProvider = new typeItemProvider(this);
		}

		return typeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.capella.bridge.uml.ea.model.xmi.extendedProperties} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected extendedPropertiesItemProvider extendedPropertiesItemProvider;

	/**
	 * This creates an adapter for a {@link org.capella.bridge.uml.ea.model.xmi.extendedProperties}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createextendedPropertiesAdapter() {
		if (extendedPropertiesItemProvider == null) {
			extendedPropertiesItemProvider = new extendedPropertiesItemProvider(this);
		}

		return extendedPropertiesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.capella.bridge.uml.ea.model.xmi.attributes} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected attributesItemProvider attributesItemProvider;

	/**
	 * This creates an adapter for a {@link org.capella.bridge.uml.ea.model.xmi.attributes}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createattributesAdapter() {
		if (attributesItemProvider == null) {
			attributesItemProvider = new attributesItemProvider(this);
		}

		return attributesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.capella.bridge.uml.ea.model.xmi.attribute} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected attributeItemProvider attributeItemProvider;

	/**
	 * This creates an adapter for a {@link org.capella.bridge.uml.ea.model.xmi.attribute}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createattributeAdapter() {
		if (attributeItemProvider == null) {
			attributeItemProvider = new attributeItemProvider(this);
		}

		return attributeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.capella.bridge.uml.ea.model.xmi.stereotype} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected stereotypeItemProvider stereotypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.capella.bridge.uml.ea.model.xmi.stereotype}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createstereotypeAdapter() {
		if (stereotypeItemProvider == null) {
			stereotypeItemProvider = new stereotypeItemProvider(this);
		}

		return stereotypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.capella.bridge.uml.ea.model.xmi.constraints} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected constraintsItemProvider constraintsItemProvider;

	/**
	 * This creates an adapter for a {@link org.capella.bridge.uml.ea.model.xmi.constraints}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createconstraintsAdapter() {
		if (constraintsItemProvider == null) {
			constraintsItemProvider = new constraintsItemProvider(this);
		}

		return constraintsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.capella.bridge.uml.ea.model.xmi.constraint} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected constraintItemProvider constraintItemProvider;

	/**
	 * This creates an adapter for a {@link org.capella.bridge.uml.ea.model.xmi.constraint}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createconstraintAdapter() {
		if (constraintItemProvider == null) {
			constraintItemProvider = new constraintItemProvider(this);
		}

		return constraintItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.capella.bridge.uml.ea.model.xmi.connectors} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected connectorsItemProvider connectorsItemProvider;

	/**
	 * This creates an adapter for a {@link org.capella.bridge.uml.ea.model.xmi.connectors}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createconnectorsAdapter() {
		if (connectorsItemProvider == null) {
			connectorsItemProvider = new connectorsItemProvider(this);
		}

		return connectorsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.capella.bridge.uml.ea.model.xmi.connector} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected connectorItemProvider connectorItemProvider;

	/**
	 * This creates an adapter for a {@link org.capella.bridge.uml.ea.model.xmi.connector}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createconnectorAdapter() {
		if (connectorItemProvider == null) {
			connectorItemProvider = new connectorItemProvider(this);
		}

		return connectorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.capella.bridge.uml.ea.model.xmi.model} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected modelItemProvider modelItemProvider;

	/**
	 * This creates an adapter for a {@link org.capella.bridge.uml.ea.model.xmi.model}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createmodelAdapter() {
		if (modelItemProvider == null) {
			modelItemProvider = new modelItemProvider(this);
		}

		return modelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.capella.bridge.uml.ea.model.xmi.source} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected sourceItemProvider sourceItemProvider;

	/**
	 * This creates an adapter for a {@link org.capella.bridge.uml.ea.model.xmi.source}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createsourceAdapter() {
		if (sourceItemProvider == null) {
			sourceItemProvider = new sourceItemProvider(this);
		}

		return sourceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.capella.bridge.uml.ea.model.xmi.target} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected targetItemProvider targetItemProvider;

	/**
	 * This creates an adapter for a {@link org.capella.bridge.uml.ea.model.xmi.target}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createtargetAdapter() {
		if (targetItemProvider == null) {
			targetItemProvider = new targetItemProvider(this);
		}

		return targetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.capella.bridge.uml.ea.model.xmi.role} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected roleItemProvider roleItemProvider;

	/**
	 * This creates an adapter for a {@link org.capella.bridge.uml.ea.model.xmi.role}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createroleAdapter() {
		if (roleItemProvider == null) {
			roleItemProvider = new roleItemProvider(this);
		}

		return roleItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.capella.bridge.uml.ea.model.xmi.tags} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected tagsItemProvider tagsItemProvider;

	/**
	 * This creates an adapter for a {@link org.capella.bridge.uml.ea.model.xmi.tags}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createtagsAdapter() {
		if (tagsItemProvider == null) {
			tagsItemProvider = new tagsItemProvider(this);
		}

		return tagsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.capella.bridge.uml.ea.model.xmi.tag} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected tagItemProvider tagItemProvider;

	/**
	 * This creates an adapter for a {@link org.capella.bridge.uml.ea.model.xmi.tag}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createtagAdapter() {
		if (tagItemProvider == null) {
			tagItemProvider = new tagItemProvider(this);
		}

		return tagItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.capella.bridge.uml.ea.model.xmi.operations} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected operationsItemProvider operationsItemProvider;

	/**
	 * This creates an adapter for a {@link org.capella.bridge.uml.ea.model.xmi.operations}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createoperationsAdapter() {
		if (operationsItemProvider == null) {
			operationsItemProvider = new operationsItemProvider(this);
		}

		return operationsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.capella.bridge.uml.ea.model.xmi.operation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected operationItemProvider operationItemProvider;

	/**
	 * This creates an adapter for a {@link org.capella.bridge.uml.ea.model.xmi.operation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createoperationAdapter() {
		if (operationItemProvider == null) {
			operationItemProvider = new operationItemProvider(this);
		}

		return operationItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void dispose() {
		if (extensionItemProvider != null) extensionItemProvider.dispose();
		if (documentationItemProvider != null) documentationItemProvider.dispose();
		if (elementsItemProvider != null) elementsItemProvider.dispose();
		if (elementItemProvider != null) elementItemProvider.dispose();
		if (xrefsItemProvider != null) xrefsItemProvider.dispose();
		if (profilesItemProvider != null) profilesItemProvider.dispose();
		if (propertiesItemProvider != null) propertiesItemProvider.dispose();
		if (packagedElementItemProvider != null) packagedElementItemProvider.dispose();
		if (umlProfileItemProvider != null) umlProfileItemProvider.dispose();
		if (ownedEndItemProvider != null) ownedEndItemProvider.dispose();
		if (packageImportItemProvider != null) packageImportItemProvider.dispose();
		if (importedPackageItemProvider != null) importedPackageItemProvider.dispose();
		if (ownedAttributeItemProvider != null) ownedAttributeItemProvider.dispose();
		if (typeItemProvider != null) typeItemProvider.dispose();
		if (extendedPropertiesItemProvider != null) extendedPropertiesItemProvider.dispose();
		if (attributesItemProvider != null) attributesItemProvider.dispose();
		if (attributeItemProvider != null) attributeItemProvider.dispose();
		if (stereotypeItemProvider != null) stereotypeItemProvider.dispose();
		if (constraintsItemProvider != null) constraintsItemProvider.dispose();
		if (constraintItemProvider != null) constraintItemProvider.dispose();
		if (connectorsItemProvider != null) connectorsItemProvider.dispose();
		if (connectorItemProvider != null) connectorItemProvider.dispose();
		if (modelItemProvider != null) modelItemProvider.dispose();
		if (sourceItemProvider != null) sourceItemProvider.dispose();
		if (targetItemProvider != null) targetItemProvider.dispose();
		if (roleItemProvider != null) roleItemProvider.dispose();
		if (tagsItemProvider != null) tagsItemProvider.dispose();
		if (tagItemProvider != null) tagItemProvider.dispose();
		if (operationsItemProvider != null) operationsItemProvider.dispose();
		if (operationItemProvider != null) operationItemProvider.dispose();
	}

}
